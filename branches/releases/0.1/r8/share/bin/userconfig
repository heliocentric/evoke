#!/bin/sh
# Copyright 2007-2009 Dylan Cochran
# All rights reserved
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted providing that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
# STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
# IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.


# $Id$

if [ ! -c "${DEVICES}/null" ] ; then
	if [ -c "/dev/null" ] ; then
		DEVICES=/dev
	else
		echo "Error, no device nodes found"
		exit 1
	fi
fi

if [ ! -d "${TMPDIR}" ] ; then
	TMPDIR=/tmp
fi


if [ ! -d "${EVOKE_SYSCONFIG_DIR}" ] ; then
	EVOKE_SYSCONFIG_DIR="/tmp/sysconfig"
	mkdir -p "${EVOKE_SYSCONFIG_DIR}"
fi

if [ ! -d "${EVOKE_CURUSER}" ] ; then
	EVOKE_CURUSER="/tmp/currentuser"
	mkdir -p "${EVOKE_CURUSER}"
fi

usage () {
	cat << EOF
usage: userconfig command [UUID] [options]

Commands:
  create	-- Create a directory for a user, and set a password.
  login		-- Login as the user specified.
  list		-- List the users in the sysconfig directory.
  menu		-- Display a pretty menu for choosing the user.
  logout	-- Logout.

EOF

}

create () {
	. $(command -v menu)
	SCRATCHDIR="${TMPDIR}/update/$(dd if=/dev/random bs=4m count=1 2>${DEVICES}/null | sha256 -q )"
	mkdir -p "${SCRATCHDIR}"
	TARBALL="${SCRATCHDIR}/tarball"
	cd "${EVOKE_CURUSER}" && tar -cf "${TARBALL}" --exclude . --exclude .. * .* 2>${DEVICES}/null
	read -p "Username: " LOGIN
	read -p "Display Name: " DISPNAME
	read -p "Do you already have an Evoke user id? [y/N]: " ANSWER
	case "${ANSWER}" in
		[yY])
			ESCAPE="no"
			until [ "${ESCAPE}" = "yes" ]
			do
				read -p "Enter UUID: " UUID
				if [ "$(is_uuid ${UUID})" = "yes" ] ; then
					if [ -d "${EVOKE_SYSCONFIG_DIR}/${UUID}" ] ; then
						echo "Error: user already exists."
						exit 3
					else
						ESCAPE="yes"
					fi
				fi
			done
			unset ESCAPE
		;;
		*)
			ESCAPE="no"
			until [ "${ESCAPE}" = "yes" ]
			do
				UUID="$(uuidgen)"
				if [ ! -d "${EVOKE_SYSCONFIG_DIR}/${UUID}" ] ; then
					ESCAPE="yes"
				fi
			done
			unset ESCAPE
		;;
	esac

	mkdir -p "${EVOKE_SYSCONFIG_DIR}/${UUID}"

	ENCTYPE=$(menu "Encryption Method" "$(mounter list proto | grep encfs; mounter list proto | grep cryptofs; echo none)" )
	case "${ENCTYPE}" in
		encfs)
			mounter encfs:${EVOKE_SYSCONFIG_DIR}/${UUID} ${EVOKE_CURUSER} 1>&2
		;;
		cryptofs)
			cat >${EVOKE_SYSCONFIG_DIR}/${UUID}/.cryptofs << EOF
[CryptoFS]
cipher=AES256
md=MD5
blocksize=2048
salts=256
EOF
			mounter cryptofs:${EVOKE_SYSCONFIG_DIR}/${UUID} ${EVOKE_CURUSER} 1>&2
		;;
		*)
			mounter nullfs:${EVOKE_SYSCONFIG_DIR}/${UUID} ${EVOKE_CURUSER} 1>&2
		;;
	esac
	echo ${DISPNAME} >${EVOKE_CURUSER}/display
	echo ${LOGIN} >${EVOKE_CURUSER}/login
	echo "${UUID}:${LOGIN}:${DISPNAME}" >>${EVOKE_SYSCONFIG_DIR}/userlist
	tar -xpf "${TARBALL}" -C "${EVOKE_CURUSER}/"
	read -p "Would you like to commit the new system configuration? [Y/n]: " ANSWER
	case "${ANSWER}" in
		[nN])
			
		;;
		*)
			sysconfig commit CURRENT ${EVOKE_SYSCONFIG_DIR} 1>&2
		;;
	esac
	rm -r "${SCRATCHDIR}"
	echo $UUID

}

login () {
	if [ "$(is_uuid ${1})" = "no" ] ; then
		echo "Error: Not UUID"
		exit 4
	fi
	DIRECTORY="${EVOKE_SYSCONFIG_DIR}/${1}"
	if [ ! -d "${DIRECTORY}" ] ; then
		echo "Error: User not found"
		exit 5
	fi
	mounter remount:${EVOKE_SYSCONFIG_DIR}/${1} ${EVOKE_CURUSER}
}

userconfig () {
	case "${1}" in
		[cC][rR][eE][aA][tT][eE])
			create
		;;
		[lL][oO][gG][iI][nN])
			login ${2}
		;;
		[lL][oO][gG][oO][uU][tT])
			mounter umount ${2}
		;;
		[lL][iI][sS][tT])
			if [ -f "${EVOKE_SYSCONFIG_DIR}/userlist" ] ; then
				cat ${EVOKE_SYSCONFIG_DIR}/userlist | awk -F ":" '{ print $1 " - " $3; }'
			fi	
		;;

		[mM][eE][nN][uU])
			. $(command -v menu)
			USERLIST="$(userconfig list)"
			NUMUSERS="$(echo "${USERLIST}" | wc -l | awk '{ print $1 }')"
			if [ "${NUMUSERS}" = "1" ] ; then
				case "${EVOKE_USEONLY}" in
					[yY][eE][sS])
						CHOICE="${USERLIST}"
					;;
					*)
						CHOICE=$(menu "Available Users" "$(echo "${USERLIST}")")
					;;
				esac
			else
				CHOICE=$(menu "Available Users" "$(echo "${USERLIST}")")
			fi
			if [ "$(is_uuid ${CHOICE})" = "yes" ] ; then
				UUID="$(echo "${CHOICE}" | awk '{ print $1 }')"
				echo ${UUID}
			fi
		;;
		*)
			usage
		;;
	esac
}

userconfig $@
