#!/bin/sh
# Copyright 2007-2008 Dylan Cochran
# All rights reserved
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted providing that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
# STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
# IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.


# $Id$

# Set this so we can call this file again if a filename passed is a directory.
BIN="$0"

# Check for the existence of the DEVICES variable, and whether it's what we need. if not, fall back to /dev
if [ ! -c "${DEVICES}/null" ] ; then
	if [ -c "/dev/null" ] ; then
		DEVICES=/dev
	else
		echo "Error, no device nodes found"
		exit 1
	fi
fi

# This works whether TRACKFILE is a device node, or a regular file.

if [ ! -r "${TRACKFILE}" -o -d "${TRACKFILE}" ] ; then
	unset TRACKFILE
fi

if [ ! -d "${PREFIX}" ] ; then
	unset PREFIX
fi

verify_loop() {
	while [ "${1}" != "" ]
	do
		TYPES="sha256 md5"
		if [ "${1}" = "-w" ] ; then
			# We export this so that the recursion portion will be able to write as well
			export WRITE="yes"

		else 
			export $(stat -f "STAT_DEV=%d STAT_TYPE=%HT" "${1}")
			case "${STAT_TYPE}" in	
				Directory)
					export STAT_NDEV=$(stat -f "%d" "$(dirname ${1})")
					if [ "${NO_RECURSE}" != "" -a "${STAT_NDEV}" != "${STAT_DEV}" ] ; then
						echo "error 2 ${1}"
					else
						# We replaced the ${BIN} ${1}/* with this for loop,
						# as it works around sh's restriction.
						for entry in $(ls -a ${1})
						do
							if [ "${entry}" != "." -a "${entry}" != ".." ] ; then
								verify_loop ${1}/${entry}
							fi
						done
					fi
				;;
				Symbolic*)
					verify_loop ${1}
				;;
				Regular)
					for type in ${TYPES}
					do
						# We always need the file's hash from the contents, so keep it out
						# of the conditional
						RHASH=$(${type} -q "${1}" 2>${DEVICES}/null)
						if [ "${WRITE}" = "yes" ] ; then
							setextattr system ${type} ${RHASH} "${1}" 2>${DEVICES}/null
						else
							unset FHASH
							if [ "${FHASH}" = "" ] ; then
								FHASH=$(getextattr -q system ${type} "${1}" 2>${DEVICES}/null)
							fi
							if [ "${RHASH}" != "${FHASH}" ] ; then
								echo "${type} fail ${1}"					
							else
								echo "${type} pass ${1}"
							fi	
						fi
					done
				;;
				*)
					echo "error 1 ${1}"
				;;
			esac
		fi
		shift
	done
}
verify_loop $@
