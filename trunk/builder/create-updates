#!/bin/sh
# Copyright 2007-2009 Dylan Cochran All rights reserved
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted providing that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
# STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
# IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.

# $Id$

FORFS="
"

OLDFS=" 	
"

if [ ! -c "${DEVICES}/null" ] ; then
	if [ -c "/dev/null" ] ; then
		DEVICES=/dev
	else
		echo "Error, no device nodes found"
		exit 1
	fi
fi

if [ ! -d "${STAGEDIR}" ] ; then
	STAGEDIR="/tmp/$(dd if=${DEVICES}/random bs=1m count=1 2>${DEVICES}/null | sha256 -q)/stagedir"
	mkdir -p "${STAGEDIR}"
fi

if [ ! -d "${RELEASEDIR}" ] ; then
	RELEASEDIR="/releases"
fi

if [ "${1}" = "" ] ; then
	echo "Error: No version set"
	exit 5
fi

DEST="${1}"

shift

DESTDIR="${1}"


if [ -d "${PATCHDIR}" ] ; then
	rm -r "${PATCHDIR}"
fi

BINUPDIR="${RELEASEDIR}/evoke/misc/BIN-UPDATES"
mkdir -p "${BINUPDIR}"
DECOMDIR="${STAGEDIR}/decom"
mkdir -p "${DECOMDIR}"
TESTDIR="${STAGEDIR}/test"
mkdir -p "${TESTDIR}"
PATCHDIR="${STAGEDIR}/patch"
mkdir -p "${PATCHDIR}"


if [ ! -f "${DESTDIR}/trackfile" ] ; then
	echo "Destination does not exist"
	exit 3
else
	cd "${DESTDIR}"
	OPTIONS="quiet" TRACKFILE="${DESTDIR}/trackfile" verify
	ERRORCODE="$?"
	if [ "${ERRORCODE}" = "0" ] ; then
		DEST_TRACKFILE="$(grep -a ^F: ${DESTDIR}/trackfile)"
	else
		echo "Destination Integrity check failed"
		exit 3
	fi
fi

shift


if [ "${1}" != "" ] ; then
	while [ "${1}" != "" ] 
	do
		SOURCE="${1}"
		SOURCEDIR="${RELEASEDIR}/evoke/${SOURCE}"
		echo "${SOURCEDIR}"
		if [ ! -f "${SOURCEDIR}/trackfile" ] ; then
			echo "Source does not exist"
		else
			cd "${SOURCEDIR}"
			TRACKFILE="${SOURCEDIR}/trackfile" verify
			ERRORCODE="$?"
			if [ "${ERRORCODE}" = "0" ] ; then
				SOURCE_TRACKFILE="$(grep -a ^F: ${SOURCEDIR}/trackfile)"
			else
				echo "Source Integrity check failed"
				break
			fi
			IFS="${FORFS}"
			for filespec in ${DEST_TRACKFILE}
			do
				FILENAME="$(echo "${filespec}" | cut -d : -f 2)"
				DESTHASH="$(echo "${filespec}" | cut -d : -f 3)"
				SOURCEFILE="${SOURCEDIR}/${FILENAME}"
				DESTFILE="${DESTDIR}/${FILENAME}"
				if [ -f "${SOURCEFILE}" ] ; then
					SOURCEHASH="$(echo "${SOURCE_TRACKFILE}" | grep ${FILENAME} | cut -d : -f 3)"
					REALHASH="$(sha256 -q "${SOURCEFILE}")"
					if [ "${REALHASH}" = "${SOURCEHASH}" ] ; then
						case "${SOURCEFILE}" in
							*.gz)
								mkdir -p "${DECOMDIR}"
								gunzip -9nc "${SOURCEFILE}" >"${DECOMDIR}/${SOURCEHASH}"
								RFILE="${DECOMDIR}/${SOURCEHASH}"
							;;
							*)
								RFILE="${SOURCEFILE}"
							;;
						esac

						case "${DESTFILE}" in
							*.gz)
								mkdir -p "${DECOMDIR}"
								gunzip -9nc "${DESTFILE}" >"${DECOMDIR}/${DESTHASH}"
								DFILE="${DECOMDIR}/${DESTHASH}"
							;;
							*)
								DFILE="${DESTFILE}"
							;;
						esac

						PATCHFILE="${PATCHDIR}/${DESTHASH}/${SOURCEHASH}"
						mkdir -p ${PATCHDIR}/${DESTHASH}/
						bsdiff "${RFILE}" "${DFILE}" "${PATCHFILE}"
						mkdir -p "${TESTDIR}"
						bspatch "${RFILE}" "${TESTDIR}/${DESTHASH}" "${PATCHFILE}"
						case "${DESTFILE}" in
							*.gz)
								mkdir -p "${DECOMDIR}"
								rm "${TESTDIR}/${DESTHASH}.gz" 2>/dev/null 1>/dev/null
								gzip -9nc "${TESTDIR}/${DESTHASH}" >"${TESTDIR}/${DESTHASH}.gz"
								mv "${TESTDIR}/${DESTHASH}.gz" "${TESTDIR}/${DESTHASH}"
							;;
							*.bz2)
							;;
							*)
								RFILE="${FILENAME}"
							;;
						esac
						REALHASH="$(sha256 -q "${TESTDIR}/${DESTHASH}")"
						if [ "${REALHASH}" != "${DESTHASH}" ] ; then
							echo "Patch failed"
							exit 4
						fi
					fi
				fi
			done
		fi
		IFS="${OLDFS}"
		shift
	done

	mkdir -p "${BINUPDIR}/${DEST}"

	cd "${PATCHDIR}" && tar -cf - * | tar -xvpf - -C "${BINUPDIR}/${DEST}" 2>/dev/null >/dev/null
fi
