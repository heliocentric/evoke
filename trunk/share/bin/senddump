#!/bin/sh
# Copyright 2007-2009 Dylan Cochran
# All rights reserved
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted providing that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
# STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
# IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.


# $Id$

DUMPDIR="${1}"

create_message () {
	printf '<?xml version=\"1.0\" encoding=\"UTF-8\"?>'
	printf "<entry xmlns='http://www.w3.org/2005/Atom' xmlns:issues='http://schemas.google.com/projecthosting/issues/2009'>"
	printf "<title>this is an issue summary</title>"
	printf "<content type='html'>this is an issue description</content>"
	printf "<author>"
	printf "<name>${AUTHOR}</name>"
	printf "</author>"
	printf "<issues:status>Autosubmit</issues:status>"
	printf "<issues:owner>"
	printf "<issues:username>${AUTHOR}</issues:username>"
	printf "</issues:owner>"
	printf "<issues:label>Type-Panic</issues:label>"
	printf "<issues:label>Milestone-${EVOKE_VERSION}</issues:label>"
	printf "<issues:label>Priority-Medium</issues:label>"
	printf "</entry>"
}

submit_message () {
	if [ -f "${1}" ] ; then
		RESPONSE="$(curl -d "accountType=GOOGLE" -d "Email=${AUTHOR}" -d "Passwd=${PASSWORD}" -d "service=code" -d "source=evoke-senddump-v1.0" 'https://www.google.com/accounts/ClientLogin' 2>/dev/null)"
		AUTHKEY="$(echo ${RESPONSE} | awk '{ print $3; }' | cut -d = -f 2)"
		CAPTCHA="$(echo ${RESPONSE} | grep ^Error=CaptchaRequired)"
		if [ "${CAPTCHA}" = "" ] ; then
			if [ "${AUTHKEY}" != "" ] ; then
				curl --request POST --header "Authorization: GoogleLogin auth=${AUTHKEY}" --header "Content-Type: application/atom+xml" --data "${1}" 'http://code.google.com/feeds/issues/p/evoke/issues/full' 2>/dev/null
			else
				echo "No auth key"
			fi
		else
			echo "Captcha support does not exist"
		fi
	fi
}

if [ -d "${DUMPDIR}" ] ; then
	STATUS="$(grep "Dump Status" "${DUMPDIR}/info")"
	case "${STATUS}" in
		*[gG][oO][oO][dD]*)
			tar -xpf "${DUMPDIR}/textdump.tar" -C "${DUMPDIR}/"
			export EVOKE_VERSION="$(cat ${DUMPDIR}/config.txt | grep ident | awk '{ print $2; }')"
			export PANIC_MESSAGE="$(cat ${DUMPDIR}/panic.txt 2>/dev/null)"
			export DMESG="$(cat ${DUMPDIR}/msgbuf.txt 2>/dev/null)"
			export DMESG="$(cat ${DUMPDIR}/ddb.txt 2>/dev/null)"
			export SYSID="$(kenv -q smbios.system.uuid 2>/dev/null)"
			export SMBIOS="$(kenv -q | grep ^smbios 2>/dev/null)"
			echo "Please enter your Google Account information to submit this bug report"
			read -p "Username: " AUTHOR
			stty -echo
			trap "stty echo ; echo 'Interrupted' ; exit 1" 1 2 3 15
			read -p "Password: " PASSWORD
			stty echo
			printf '\n'
			create_message >${DUMPDIR}/message
			submit_message "${DUMPDIR}/message"
#			curl -F "version=${EVOKE_VERSION}" -F "panic=${PANIC_MESSAGE}" -F "dmesg=${DMESG}" -F "systemid=${SYSID}" -F "trace=${TRACE}" -F "smbios=${SMBIOS}" http://www.damnsmallbsd.org/panic.php

		;;
	esac
fi
