#!/bin/sh
# Copyright 2007-2008 Dylan Cochran
# All rights reserved
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted providing that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
# STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
# IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.


# $Id$

if [ ! -c "${DEVICES}/null" ] ; then
	if [ -c "/dev/null" ] ; then
		DEVICES=/dev
	else
		echo "Error, no device nodes found"
		exit 1
	fi
fi

if [ ! -d "${TMPDIR}" ] ; then
	TMPDIR=/tmp
fi

SCRATCHDIR="${TMPDIR}/sctemp/$(dd if=${DEVICES}/random bs=4m count=1 2>${DEVICES}/null | md5 -q )"	
mkdir -p "${SCRATCHDIR}"

if [ ! -d "${N_SYSCFG}" ] ; then
	N_SYSCFG="/tmp/sysconfig"
	mkdir -p "${N_SYSCFG}"
fi

usage () {
}

prepnvram () {
	TYPE=$(stat -f "%HT" "${DEVICES}/${1}")
	case "${TYPE}" in
		Character*)
			SC_GEOM=$(sysctl -b kern.geom.conftxt | grep -a ${1})
			SC_SECTORSIZE=$(echo ${SC_GEOM} | cut -d " " -f 5)
			dd if=${DEVICES}/${1} of=${SCRATCHDIR}/headsect bs=${SC_SECTORSIZE} count=1 conv=sync fillchar=" " 2>/dev/null
			dd if=${SCRATCHDIR}/headsect of=${SCRATCHDIR}/hash bs=64 count=1 conv=sync fillchar=" " 2>/dev/null
			dd if=${SCRATCHDIR}/headsect of=${SCRATCHDIR}/header bs=64 skip=1 conv=sync fillchar=" " 2>/dev/null
			HEADERSIZE="$(stat -f '%z' ${SCRATCHDIR}/header)"
		;;
		*)
			echo "Not a character device"
			exit 2
		;;
	esac
}

case "${1}" in
	[vV][eE][rR][iI][fF][yY])
		prepnvram "${2}"
		RHASH=$(sha256 -q ${SCRATCHDIR}/header)
		HASH=$(cat ${SCRATCHDIR}/hash)
		if [ "${RHASH}" != "${HASH}" ] ; then
			echo "failed"
			exit 3
		else
			echo "passed"
			exit 0
		fi
	;;
	[eE][xX][tT][rR][aA][cC][tT])
		EXTRACTPOINT="${3}"
		prepnvram "${2}"
		set | grep ^SC
	;;
	[lL][iI][sS][tT])
		mounter list nvram
	;;
	[cC][lL][eE][aA][rR])
		prepnvram "${2}"
	;;
	[cC][rR][eE][aA][tT][eE])
		prepnvram "${2}"
		unset break
		until [ "${break}" = "yes" ]
		do
			read -p "Description: " LONGDESC
			if [ "${LONGDESC}" != "" ] ; then
				break="yes"
			else
				echo "Please input a long description"
			fi
		done
		unset break
		until [ "${break}" = "yes" ]
		do
			read -p "Length of the config log: " CONFIGLOG
			if [ "${CONFIGLOG}" != "" ] ; then
				break="yes"
			else
				CONFIGLOG=8
				break="yes"
			fi
		done
		UUID=$(uuid -v 4)
		printf "\nlog=${CONFIGLOG}\nuuid=${UUID}\ndescription=${LONGDESC}\n" | dd bs=${HEADERSIZE} count=1 of=${SCRATCHDIR}/header conv=sync 2>/dev/null
		sha256 -q ${SCRATCHDIR}/header | dd bs=64 count=1 of=${SCRATCHDIR}/hash fillchar=" " conv=sync 2>/dev/null
		cat ${SCRATCHDIR}/hash ${SCRATCHDIR}/header >${SCRATCHDIR}/headsect
	;;
	*)
		usage
	;;
esac

#rm -r ${SCRATCHDIR}
