#!/bin/sh
# Copyright 2007-2008 Dylan Cochran
# All rights reserved
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted providing that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
# STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
# IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.

# $Id$

# Generic wrappers so that installer will work on FreeBSD.

if [ ! -c "${DEVICES}/null" ] ; then
	if [ -c "/dev/null" ] ; then
		DEVICES=/dev
	else
		echo "Error, no device nodes found"
		exit 1
	fi
fi

if [ "${N_MNTDIR}" = "" ] ; then
	if [ -d /media ] ; then
		export N_MNTDIR="/media"
	fi
fi

echo "WARNING. installer is experimental, and there ARE bugs"
echo "that will result in loss of data. DO NOT USE"
read -p "Continue? [yN]: " CONT
if [ "${CONT}" != "y" ] ; then
	exit
fi

main_installer () {
	until [ "${BREAKOUT}" = "yes" ] 
	do
		clear
		echo "Installer"
		echo ""
		echo "-----------------------------"
		echo ""
		echo " 1) Install FreeBSD"
		echo " 2) Install DamnSmallBSD "
		echo " a) Activater"
		echo " q) Exit "
		echo ""
		echo ""
		read -p "Choice: " CHOICE
		case "${CHOICE}" in
			2)
				bsd_chooser
				dsbsd_installer
			;;
			1)
				bsd_chooser
				freebsd_installer
			;;
			[qQ])
				BREAKOUT="yes"
			;;
		esac
	done
}

# (Free|DamnSmall)BSD destination chooser.

bsd_chooser() {
	echo ""
	echo -n "Partition Disks? [yN]: "
	read ANSWER
	case "${ANSWER}" in
		[yY])
			partdisk freebsd
		;;
	esac
	clear
	if [ "${ROOTFS}" = "" ] ; then
		clear
		ROOTFS=$(menu "Choose Root Filesystem" "mounter list boot-ufs")
	fi
	mounter ufs ${ROOTFS} ${DESTDIR}
}

# Disk partitioning function
partdisk() {
	clear
	RESULT=$(menu "Choose Disk" "mounter list disk")
	echo -n "Do you want to use the entire disk? [yN]"
	read ANSWER
	case "${ANSWER}" in
		[yY])
			dd if=/dev/zero bs=4m count=1 of=${DEVICES}/${RESULT} 2>${DEVICES}/null
			fdisk -IB ${DEVICES}/${RESULT}
			bsdlabel -wB ${DEVICES}/${RESULT}s1
			bsdlabel -e ${DEVICES}/${RESULT}s1
			if [ -c "${DEVICES}/${RESULT}s1a" ] ; then
				ROOTHASH=$(dd if=/dev/random bs=4m count=1 2>${DEVICES}/null | md5 -q | cut -b 1-31)
				ROOTFS="${RESULT}s1a"
			fi
			newfs -L ${ROOTHASH} ${DEVICES}/${ROOTFS}
		;;
		[nN])
			echo "Not currently Implemented"
		;;
	esac
}

# Quick menu function, works for choosing single objects.
menu() {
	echo "${1}:" 1>&2
	echo "" 1>&2
	eval $2 | awk '{ print " " NR ") " $0 }' 1>&2
	echo "" 1>&2
	read -p "Choice: " CHOICE
	eval $2 | awk -v CHOICE=${CHOICE} '{ if (NR == CHOICE) { print $0 } }'
}

freebsd_installer() {
	unset BREAKOUT
	while [ "${BREAKOUT}" != "yes" ]
	do
		clear
		SRCFS=$(menu "Choose Source" "mounter list fs")
		clear
		SRCLOC=$(menu "Choose Location" "(mounter list ${SRCFS} ; echo Enter Location)")
		if [ "${SRCLOC}" = "Enter Location" ] ; then
			echo "Please type the device node or URL you wish to use."
			echo "ex. ad0s1a, or http:///www.google.com"
			read -p ": " SRCLOC
		fi
		BREAKOUT="yes"
	done
	mounter ${SRCFS} ${SRCLOC} ${SOURCEDIR}
}

dsbsd_installer() {
}

# Main program. Note, we use random sha256 hashes, so that installer 
# can theoretically be run on a multi-user system
# Due to other reasons, it can't, but it's not /our/ fault.
# Not like we can unlink device nodes until we are done, 
# then relink it, causing exclusivity for our process and it's children.
# 
# Give the admin the option, and hope to hell they are smart enough not 
# to run installer on the same device nodes.

export SOURCEDIR=${N_MNTDIR}/$(dd if=/dev/random bs=4m count=1 2>/dev/null | sha256 -q)
export DESTDIR=${N_MNTDIR}/$(dd if=/dev/random bs=4m count=1 2>/dev/null | sha256 -q)

mkdir -p ${SOURCEDIR}
mkdir -p ${DESTDIR}

#main_installer
freebsd_installer
mounter unmount ${DESTDIR}
mounter unmount ${SOURCEDIR}
rm -r ${SOURCEDIR}
rm -r ${DESTDIR}
