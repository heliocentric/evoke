#!/bin/sh
# Copyright 2007-2008 Dylan Cochran
# All rights reserved
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted providing that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
# STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
# IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.

# $Id$

if [ ! -c "${DEVICES}/null" ] ; then
	if [ -c "/dev/null" ] ; then
		DEVICES=/dev
	else
		echo "Error, no device nodes found"
		exit 1
	fi
fi

get_disk () {
       sysctl -b kern.geom.conftxt | grep -a DISK | awk '{ print $3; }' | grep -v afd | grep -v cd | grep -v acd | grep -v fd | sort
}

real_install () {
	if [ -c ${DEVICES}/label/trackfile ] ; then
		CLEANFILE=$(grep -v ^# ${DEVICES}/label/trackfile)
		for i in $(echo ${CLEANFILE} | grep ^F)
		do
			echo "${i}"
		done
	else
		echo "Trackfile not found"
	fi
	case "${TYPE}" in
		tftp)
			SOURCEDIR=${TMPDIR}/$$/source
			TARGETDIR=${TMPDIR}/$$/target
			mkdir -p ${SOURCEDIR}
			mkdir -p ${TARGETDIR}
		;;
		disk)
			
		;;
	esac
}

dsbsd_install () {
	# expect TYPE= to be set to either tftp, cd, or disk.
	# for tftp, use TFTP_IP as the ip of the tftp server. Always verify.
	# Use TDISK as the target
	if [ "${TDISK}" != "" ] ; then
		echo "Are you absolutely sure you want to DESTROY all data on ${TDISK}?"
		read -p "Choice: [y/N] " CHOICE
		case "${CHOICE}" in
			[yY])
				real_install
			;;
		esac
	fi
}

choose_dsbsd_target () {
	until [ "${BREAKOUT}" = "yes" ] 
	do
		clear
		echo "Choose Target"
		echo ""
		echo "-----------------------------"
		echo ""
		get_disk | awk '{ print " " NR ") " $0; }'
		echo " q) Exit"
		echo ""
		echo ""
		read -p "Choice: " CHOICE
		case "${CHOICE}" in
			[qQ])
				return
			;;
			*)
				export TDISK=$(get_disk | awk "NR == ${CHOICE}")
				return
			;;
		esac
	done

}
choose_dsbsd_source () {
		clear
		echo "Choose Source"
		echo ""
		echo "-----------------------------"
		echo ""
		echo " t) TFTP"
		echo " q) Exit"
		echo ""
		echo ""
		read -p "Choice: " CHOICE
		case "${CHOICE}" in
			[qQ])
				return
			;;
			[tT])
				read -p "Enter IP of TFTP server: [$(kenv -q boot.nfsroot.server)]" IP
				if [ "${IP}" = "" ] ; then
					export TFTP_IP=$(kenv -q boot.nfsroot.server)
				else
					export TFTP_IP=${IP}
				fi
				export TYPE=tftp
			;;
			*)
				return
			;;
		esac

}

dsbsd_installer () {
	clear
	echo "*** Warning! ***"
	echo "Installer destroys all data on the target device, and does not give you the"
	echo "option to keep anything. It should only be used for Dedicated DamnSmallBSD boot"
	echo "devices."
	echo ""
	read -p "Press Enter to Continue.  " CHOICE
	choose_dsbsd_source
	choose_dsbsd_target
	dsbsd_install
}

main_installer () {
	until [ "${BREAKOUT}" = "yes" ] 
	do
		clear
		echo "Installer"
		echo ""
		echo "-----------------------------"
		echo ""
		echo " 1) Install DamnSmallBSD "
		echo " q) Exit "
		echo ""
		echo ""
		read -p "Choice: " CHOICE
		case "${CHOICE}" in
			1)
				dsbsd_installer
			;;
			[qQ])
				return
			;;
		esac
	done
}

main_installer
