#!/bin/sh
# Copyright 2007-2009 Dylan Cochran
# All rights reserved
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted providing that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
# STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
# IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.


# $Id$

# Set this so we can call this file again if a filename passed is a directory.
BIN="$0"

# Check for the existence of the DEVICES variable, and whether it's what we need. if not, fall back to /dev
if [ ! -c "${DEVICES}/null" ] ; then
	if [ -c "/dev/null" ] ; then
		DEVICES=/dev
	else
		echo "Error, no device nodes found"
		exit 1
	fi
fi

# This works whether TRACKFILE is a device node, or a regular file.

if [ ! -r "${TRACKFILE}" -o -d "${TRACKFILE}" ] ; then
	unset TRACKFILE
fi

if [ ! -d "${PREFIX}" ] ; then
	unset PREFIX
fi
if [ ! -d "${TMPDIR}" ] ; then
	TMPDIR="/tmp"
fi

dircheck() {
	if [ "${NO_RECURSE}" != "" -a "${1}" = "inode/mount-point" ] ; then
		echo "error 2 ${2}"
	else
		# We replaced the ${BIN} ${2}/* with this for loop,
		# as it works around sh's restriction.
		for entry in $(ls -a ${2})
		do
			if [ "${entry}" != "." -a "${entry}" != ".." ] ; then
				verify_loop ${2}/${entry}
			fi
		done
	fi
}

verify_loop() {
	TYPES="sha256 md5"

	while [ "${1}" != "" ]
	do
		export MIME_TYPE="$(OPTIONS="quiet norecurse" filetype "${1}")"
		case "${MIME_TYPE}" in	
			inode/directory)
				dircheck "${MIME_TYPE}" "${1}"
			;;
			inode/mount-point)
				dircheck "${MIME_TYPE}" "${1}"
			;;
			*)
				echo "${1}"
				for type in ${TYPES}
				do
					# We always need the file's hash from the contents, so keep it out
					# of the conditional
					RHASH=$(${type} -q "${1}" 2>${DEVICES}/null)
					if [ "${WRITE}" = "yes" ] ; then
						setextattr system ${type} ${RHASH} "${1}" 2>${DEVICES}/null
					else
						unset FHASH
						if [ "${FHASH}" = "" ] ; then
							FHASH=$(getextattr -q system ${type} "${1}" 2>${DEVICES}/null)
						fi
						if [ "${RHASH}" != "${FHASH}" ] ; then
							echo "${type} fail ${1}"					
						else
							echo "${type} pass ${1}"
						fi	
					fi
				done
			;;
			*)
				echo "error 1 ${1}"
			;;
		esac
		shift
	done
}

verify() {
	SCRATCHDIR="${TMPDIR}/scratch/$(dd if=/dev/random bs=4m count=1 2>/dev/null | sha256 -q)"
	mkdir -p "${SCRATCHDIR}"

	verify_loop $@
}

blah() {
	# The trackfile serves two purposes. To make the system verifyable, and to allow us to safely tftp install. Yay!
	cd ${BOOTDIR}${BOOTPREFIX}

	for file in $( find ./ -not -type d | cut -b 3-200)
	do
		echo "F:${file}:$(sha256 -q ${file}):$(stat -f '%z')" >>${TRACKFILE}
	done
	echo -n "# " >>${TRACKFILE}

	# Why? We add a trailer to the trackfile, and create a label in it; this way it always comes up as /dev/label/trackfile, and the kernel can always find it.
	dd if=${TRACKFILE} bs=512 fillchar=" " conv=sync of=/tmp/trackfile.head 
	dd if=/dev/zero bs=512 count=1 of=/tmp/trackfile.tail
	cat /tmp/trackfile.head /tmp/trackfile.tail >${BOOTDIR}${BOOTPREFIX}/trackfile
	DEVICE=$(mdconfig -af ${BOOTDIR}${BOOTPREFIX}/trackfile)
	geom label load
	geom label label trackfile /dev/${DEVICE}
	mdconfig -d -u $(echo ${DEVICE} | cut -b 3-7)
}

verify $@
