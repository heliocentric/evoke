#!/bin/sh
# $Id

umask 077
export TERM=cons25

OS=$(sysctl -n kern.ostype)
ABI=$(sysctl -n kern.osrelease | cut -d . -f 1)
export ARCH=$(sysctl -n hw.machine_arch)
export MACHINE=$(sysctl -n hw.machine)


echo -n "Merging /lib and /libexec					"
if [ -d "/.${OS}-${ABI}/${ARCH}/lib" ] ; then
	mount_nullfs -o union,ro /.${OS}-${ABI}/${ARCH}/lib /lib
fi
if [ -d "/.${OS}-${ABI}/${ARCH}/libexec" ] ; then
	mount_nullfs -o union,ro /.${OS}-${ABI}/${ARCH}/libexec /libexec
fi

echo "[DONE]"

echo -n "Merging /bin							"
if [ -d "/.${OS}-${ABI}/${ARCH}/bin" ] ; then
	mount_nullfs -o union,ro /.${OS}-${ABI}/${ARCH}/bin /bin
fi
mount_nullfs -o union,ro /share/bin/ /bin/
export PATH=/bin
echo "[DONE]"
echo -n "Verifying root filesystem					"
ROOTFINGERPRINT=$(kenv -q dsbsd.fingerprint)
if [ "${ROOTFINGERPRINT}" != "" ] ; then
	if [ "${ROOTFINGERPRINT}" != "$(sha256 -q /dev/md0)" ] ; then
		echo "[FAILED]"
		reboot
	fi
fi
echo "[DONE]"

#echo -n "Remounting root filesystem R/W					"
#mount -o update,rw /dev/md0 / 2>/dev/null >/dev/null
#echo "[DONE]"

echo -n "Creating /tmp							"
mdmfs -s4m md /tmp
mkdir /tmp/lib
mkdir /tmp/run
mkdir /tmp/pid
mkdir /tmp/db
mkdir /tmp/scratch
chmod 777 /tmp/scratch
chmod +t /tmp/scratch
export TMPDIR=/tmp/scratch
mount_nullfs -o union,ro /share/lib/ /cfg/
mount_nullfs -o union,ro /tmp/lib/ /cfg/
echo "[DONE]"

echo -n "Grabbing root password from loader.conf				"
RPASSWD=$(kenv -q dsbsd.rootpassword)
if [ "${RPASSWD}" = "" ] ; then
	echo "[FAILED]"
	echo -n "Setting password to 'password'					"
	RPASSWD='$1$1QgK4Xsg$.PInGIAb4c0nznxpRkUPk.'
	echo "[DONE]"
else
	echo "[DONE]"
fi

echo -n "Creating master.passwd						"
echo "root:${RPASSWD}:0:0::0:0:Super-User:/:/bin/tcsh" >>/tmp/lib/master.passwd
echo "nobody:NOTREALPASSWORD:1:1::0:0:nobody:/tmp/empty:/dev/null" >>/tmp/lib/master.passwd

pwd_mkdb -i -p -d /tmp/lib/ /tmp/lib/master.passwd 2>/dev/null
cap_mkdb -f /tmp/lib/login.conf.db /share/lib/login.conf
echo "/bin/tcsh" >>/tmp/lib/shells
echo "/bin/csh" >>/tmp/lib/shells
echo "/bin/sh" >>/tmp/lib/shells
echo "[DONE]"

echo -n "Finding network interface					"
IF="$(kenv -q boot.netif.name)"
if [ "${IF}" = "" ] ; then
   for i in `ifconfig -l`
   do
               case ${i} in
                        lo*)
                       ;;
                        plip*)
                       ;;
                        slip*)
                       ;;
                        fwe*)
                       ;;
                        ppp*)
                       ;;
                       *)
                               IF="${i}"
                       ;;
               esac
   done
fi
echo "[DONE]"

echo -n "Configuring network						"
ifconfig lo0 inet 127.0.0.1 netmask 255.255.255.255
IP="$(kenv -q boot.netif.ip)"
NETMASK="$(kenv -q boot.netif.netmask)"
GATEWAY="$(kenv -q boot.netif.gateway)"
DNS="$(kenv -q boot.netif.dns)"
if [ "${IP}" != "" -a "${NETMASK}" != "" -a "${GATEWAY}" != "" ] ; then
	ifconfig ${IF} inet ${IP} netmask ${NETMASK}
	route add default ${GATEWAY} 2>/dev/null >/dev/null
	if [ "${DNS}" = "" ] ; then
		echo "nameserver ${GATEWAY}" >/tmp/lib/resolv.conf
	else
		echo "nameserver ${DNS}" >/tmp/lib/resolv.conf
	fi

else
	dhclient ${IF} >/dev/null 2>/dev/null
fi

echo "[DONE]"

echo -n "Starting moused							"
cd /dev
for i in ums* psm0
do
	moused -p /dev/${i} -3 -I /tmp/pid/${i}.pid 2>/dev/null
done
for ttyv in /dev/ttyv* ; do
	vidcontrol < ${ttyv} -m on
done

echo "[DONE]"

echo -n "Starting syslogd						"
echo "syslog		514/udp" >> /tmp/lib/services
echo "" >/tmp/db/log
cat >/tmp/lib/syslogd.conf << EOF
*.notice;authpriv.none;kern.debug;*.info;*.crit;*.err	/tmp/db/log
!ftpd
*.*	/tmp/db/log
!sshd
*.*	/tmp/db/log
EOF
syslogd -ss -f /tmp/lib/syslogd.conf -P /tmp/pid/syslogd.pid -p /tmp/run/log
echo "[DONE]"

echo -n "Starting sshd							"
ssh-keygen -t dsa -f /tmp/lib/ssh_key -N '' >/dev/null 2>/dev/null
cat >/tmp/lib/sshd.conf << "EOF"
HostKey /tmp/lib/ssh_key
PermitRootLogin yes
UsePrivilegeSeparation no                       
UseDNS no
PidFile /tmp/pid/sshd.pid
PasswordAuthentication yes
PermitEmptyPasswords no
ForceCommand tcsh
EOF
/bin/sshd -f /tmp/lib/sshd.conf 2>/dev/null
echo "[DONE]"

echo -n "Starting ftpd							"
echo "ftp	21/tcp" >>/tmp/lib/services
cat >/tmp/lib/ftpusers << EOF
# blah
EOF
ftpd -D -d -p /tmp/pid/ftpd.pid
echo "[DONE]"

cd /

tcsh
reboot
