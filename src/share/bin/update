#!/bin/sh
# Copyright 2007-2009 Dylan Cochran
# All rights reserved
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted providing that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
# STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
# IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.


# $Id$

# the for field specifier, so call for like so: local IFS="${FORFS}" \n for blah in blah

FORFS="
"

OLDFS=" 	
"

PATH="${PATH}:/usr/libexec"

if [ ! -c "${DEVICES}/null" ] ; then
	if [ -c "/dev/null" ] ; then
		DEVICES=/dev
	else
		echo "Error, no device nodes found"
		exit 1
	fi
fi

if [ ! -d "${TMPDIR}" ] ; then
	TMPDIR="/tmp"
fi

real_update() {
	if [ -d "${2}" ] ; then
		DESTDIR="${2}"
	else
		echo "Destination directory not found."
		exit 65
	fi
	phttpget "${SERVER}" "${FILESPEC}/${1}/trackfile" 2>${DEVICES}/null
	if [ -r "${TEMPDIR}/trackfile" ] ; then
		DEST_TRACKFILE="$(grep -a ^F: ${TEMPDIR}/trackfile)"
	fi
	cd "${DESTDIR}/evoke/"
	for version in $(echo */*) 
	do
		case "${version}" in
			BIN-UPDATES/*)
			;;
			ISO-IMAGES/*)
			;;
			*)
				echo "${version}"
			;;
		esac
	done
}

update() {
	SCRATCHDIR="${TMPDIR}/update/$(dd if=/dev/random bs=4m count=1 2>${DEVICES}/null | sha256 -q)"
	mkdir -p "${SCRATCHDIR}"
	TEMPDIR="${SCRATCHDIR}/tmp"
	mkdir -p "${TEMPDIR}"

	cd "${TEMPDIR}"

	if [ "${EVOKE_UPDATE_MIRROR}" = "" ] ; then
		phttpget evoke.googlecode.com /svn/info/mirrorlist 2>${DEVICES}/null
		EVOKE_UPDATE_MIRROR="$(grep -v ^# ${TEMPDIR}/mirrorlist | grep -v ^$ | grep ^http:// | head -n 1)"
	fi

	SERVER="$(echo "${EVOKE_UPDATE_MIRROR}" | sed 's_http://__g' | cut -d "/" -f 1)"
	FILESPEC="/$(echo "${EVOKE_UPDATE_MIRROR}" | sed 's_http://__g' | cut -d "/" -f 2)/evoke"

	case "${1}" in
		install)
			if [ "${2}" != "" ] ; then
				real_update "${2}" "${3}"
			fi
		;;
	esac
}

update $@
