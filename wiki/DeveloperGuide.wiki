#summary Guide for new developers.
#labels Developer

<wiki:toc max_depth="3" />

= Using the SVN Repo =

== Checkout ==

It is highly recommended that you at least check out the tools, and add them to your PATH, before any other paths.

 `svn https://evoke.googlecode.com/svn/tools evoke-tools`

== Commit Log format ==

{{{
* Item A
* Item B
* Item C
}}}

For certain commits, a short description line is necessary, like so.

{{{
Description

* Item A
* Item B
* Item C
}}}

Right now, only merge backs do.

= Release Engineering Guide =

== Creating a Release Branch ==

(All commands relevant to /, not /trunk)

To initially create a release branch, always use the following steps:

 `svn mkdir branches/releases/0.2`


 `svn copy trunk branches/releases/0.2/R1`

R1 is always the first revision.

Next, add a release page:
 `svn add wiki/Release02.wiki`

There is only one release page per release, so ignore the revision.

The first thing to do is fill out the release page with the todo list:

{{{
#summary 0.2 Release Notes

== Todo ==

 * any items that need to be done before R1
}}}

Then, we need to copy the wiki into the branch, like so:

 `svn copy wiki branches/releases/0.2/R1/src/doc`

Now, we commit:

 `svn commit`

The format of the commit message is similar to 'Merge', except the items are not commit logs that apply, rather, it is the contents of the initial Todo list.
{{{
Branch /trunk rREVISION to /branches/releases/0.2/R1 

 * any items that need to be done before R1

}}}

== 'Setting' a release branch ==

When the binaries for a revision of a release branch are finished, and placed on the http mirror, you must set a property on the copy of the release 
tree. After this point, NO more commits may happen to that revision. You must create a new revision of the release branch and work on that.

You should set it with this command:

 `svn propset evoke-binaries-built "" https://evoke.googlecode.com/svn/branches/releases/0.2/R1`

== Back merging changes into a release branch ==

Use the backmerge utility in tools/, like so.

 `cd branches/releases/0.1/R1/`
 `backmerge`

Note that there is no options to the utility yet. When we need them, I will add them.


== Creating a new revision ==

As stated earlier, you cannot commit to a revision after the binaries have been built, therefore you must do a copy, like so:

 `svn copy https://evoke.googlecode.com/svn/branches/releases/0.2/R1 https://evoke.googlecode.com/svn/branches/releases/0.2/R2`

The rules for creating binaries apply to every revision, not just the first revision. In this way, our boot versioning system can be used by the users effectively.