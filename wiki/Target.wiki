#summary An idealized target environment
#labels Phase-Requirements,Featured

= Target Environment =

This is a description of the target environment of evoke. While we may not be able to implement it, we should not 
do anything to prevent it's implementation.


== Boot Server ==

Runs a dhcp and tftp server, and provides pxe boot functionality, or it's equivalent in other architectures. Key 
features are:

  * It boots off of the same drive that tftp then serves out for pxe functionality.
  * All configuration is kept in a seperate sysconfig partition/drive/etc.
  * The version of evoke the boot server boots is determined by it's boot.config. 
  * The version of evoke the clients boot is determined by the dhcp configuration, so the version can be host or network specific.

In this way there is one namespace for the evoke binaries, which can then be safely replicated.

== Installing New Hosts ==

Installing a new host should be as simple as enabling DHCP boot services, and uploading the boot server's public 
key into the firmware. This step is necessary to ensure that the boot code recieved by the dhcp server is signed 
and verified as being legitimate.

Once evoke has booted, it contacts the boot server to recieve it's site specific configuration options.

== Upgrading/Updating ==

New versions of evoke are merely copied to the boot server. When a machine needs to be upgraded/updated, the dhcp 
config is changed to point to a more recent version, or boot.config for hard drive installs. 'Upgrades' do not 
exist in the classical sense. You merely activate the version to be used at boot. 

== Switching architectures and kernels ==

Switching to an architecture, or a new kernel abi (Ie, from FreeBSD 6.3 i386 to Linux 2.6 amd64) is the same as upgrading, you just activate the abi and architecture for the next boot. Each release supports multiple targets.